{"version":3,"sources":["redux/reducers/name.js","redux/reducers/result.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","redux/selectors/result.js","redux/actions.js","config/text.js","components/ui/TopSendName.jsx","components/pages/Top.jsx","config/route.js","components/pages/Result.jsx","containers/GetResultContainer.jsx","components/Routes.jsx","components/layouts/Footer.jsx","components/App.jsx","index.js"],"names":["initialState","name","isFetching","data","combineReducers","state","action","type","result","receivedAt","error","logger","createLogger","diff","collapsed","store","createStore","rootReducer","applyMiddleware","thunk","dispatch","axios","get","process","then","res","Date","now","catch","err","INPUT_NAME","TopSendName","props","updataInput","input","setState","disabled","trim","handleSendName","inputSendName","transition","className","htmlFor","id","placeholder","onChange","e","target","value","this","onClick","Component","connect","text","Top","handleClick","history","push","withRouter","Result","datatime","pulse","avg","sick","message","length","jsonObj","Routes","path","exact","component","Footer","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0QAEMA,EAAe,CACnBC,KAAM,I,QCDFD,EAAe,CACnBE,YAAY,EACZC,KAAM,ICAOC,cAAgB,CAACH,KFEjB,WAAmC,IAAlCI,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC/C,OAAOA,EAAOC,MACZ,IGP2B,YHQzB,OAAO,eACFF,EADL,CAEEJ,KAAMK,EAAOL,OAEjB,QACE,OAAOI,IEVyBG,ODGvB,WAAqC,IAApCH,EAAmC,uDAA3B,CAACL,GAAeM,EAAW,uCACjD,OAAOA,EAAOC,MACZ,IEN8B,qBFO5B,MAAM,GAAN,mBACKF,GADL,CAEE,CACEH,YAAY,EACZC,KAAM,MAGZ,IEb8B,qBFc5B,MAAM,GAAN,mBACKE,GADL,CAEE,CACEH,YAAY,EACZC,KAAMG,EAAOE,OACbC,WAAYH,EAAOG,cAGzB,IErB8B,qBFsB5B,MAAM,GAAN,mBACKJ,GADL,CAEE,CACEH,YAAY,EACZQ,MAAOJ,EAAOI,SAGpB,QACE,OAAOL,M,iBG7BPM,EAASC,uBAAa,CAC1BC,MAAM,EACNC,WAAU,IAGNC,EAAQC,YACZC,EACAC,YAAgBC,IAAOR,IAGzBI,EAAMK,UCZG,SAACA,GACNA,ECGmC,CACrCb,KHNgC,uBEG9Bc,IAAMC,IAAIC,mCACPC,MAAK,SAAAC,GACJL,ECIiC,CACvCb,KHTgC,qBGUhCC,ODNgCiB,EAAItB,KCOpCM,WAAYiB,KAAKC,WDLZC,OAAM,SAAAC,GACLT,ECOkC,CACxCb,KHdgC,qBGehCG,MDTgCmB,UDOnBd,Q,uDGjBFe,EACJ,6IADIA,EAEE,yDCETC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAIRC,YAAc,SAAAC,GACZ,EAAKC,SAAS,CAAED,QAAOE,UAAUF,EAAMG,UANtB,EASnBC,eAAiB,WACf,EAAKN,MAAMO,cAAc,EAAKlC,MAAM6B,MAAMG,QAC1C,EAAKF,SAAS,CAACD,MAAO,KACtB,EAAKF,MAAMQ,cAVX,EAAKnC,MAAQ,CAAC6B,MAAO,GAAIE,UAAU,GAFlB,E,sEAeT,IAAD,OACP,OACE,yBAAKK,UAAU,aACb,2BAAOC,QAAQ,QACZZ,EACD,2BACEvB,KAAK,OACLoC,GAAG,OACHC,YAAad,EACbe,SAAU,SAAAC,GAAC,OAAI,EAAKb,YAAYa,EAAEC,OAAOC,QACzCA,MAAOC,KAAK5C,MAAMJ,QAGtB,4BAAQwC,UAAU,YAAYS,QAAUD,KAAKX,eAAiBF,SAAUa,KAAK5C,MAAM+B,UAAnF,kB,GA7BkBe,aAqCXC,cAAQ,KAAM,CAACb,cFvCD,SAAAc,GAAI,MAAK,CACpC9C,KHH6B,YGI7BN,KAAMoD,KEqCOD,CAA+BrB,GCpCxCuB,E,2MAEJC,YAAc,WACZ,EAAKvB,MAAMwB,QAAQC,KCPI,Y,wEDWvB,OACE,yBAAKhB,UAAU,YAEb,kBAAC,EAAD,CAAaD,WAAYS,KAAKM,mB,GAVpBJ,aAgBHO,cAAWJ,GElBpBK,E,iLAEF,OACE,6BACE,uBAAGlB,UAAU,aAAb,iCAA+BQ,KAAKjB,MAAM/B,MAC1C,uBAAGwC,UAAU,aAAb,qBAA6BQ,KAAKjB,MAAM7B,KAAKyD,UAC7C,uBAAGnB,UAAU,aAAb,2BAA8BQ,KAAKjB,MAAM7B,KAAK0D,MAAMC,KACpD,uBAAGrB,UAAU,aAAb,qBAA6BQ,KAAKjB,MAAM7B,KAAK4D,KAAK9D,MAClD,uBAAGwC,UAAU,aAAb,qBAA6BQ,KAAKjB,MAAM7B,KAAK4D,KAAKC,c,GARrCb,aAgBNC,eAFS,SAAA/C,GAAK,OAAIA,EAAMJ,OAExBmD,CAAyBO,GCXzBP,eANS,SAAA/C,GACtB,IAAM4D,EAAS5D,EAAMG,OAAOyD,OAE5B,MAAO,CAAE9D,KADYE,EAAMG,OAAOyD,EAAS,GACf9D,KAAK+D,WAGpBd,CAAyBO,GCCnBQ,E,iLAEjB,OACE,yBAAK1B,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2B,KHfK,IGekBC,OAAK,EAACC,UAAWhB,IAC/C,kBAAC,IAAD,CAAOc,KHfQ,UGekBC,OAAK,EAACC,UAAWX,IAClD,kBAAC,IAAD,CAAOU,OAAK,EAACC,UAAWhB,W,GARAH,aCArBoB,EARA,WACb,OACE,4BAAQ9B,UAAU,UAChB,+CCSS+B,EATH,WACV,OACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCAgC,G,MAAcC,SAASC,eAAe,SAE5CC,IAASC,OACP,kBAAC,IAAD,CAAU9D,MAAOA,GACf,kBAAC,EAAD,OAEF0D,K","file":"static/js/main.903aa5da.chunk.js","sourcesContent":["import {INPUT_SEND_NAME} from 'redux/actionTypes'\n\nconst initialState = {\n  name: ''\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case INPUT_SEND_NAME:\n      return {\n        ...state,\n        name: action.name\n      };\n    default:\n      return state;\n  }\n}","import { GET_RESULT_REQUEST, GET_RESULT_SUCCESS, GET_RESULT_FAILURE } from 'redux/actionTypes'\n\nconst initialState = {\n  isFetching: false,\n  data: ''\n};\n\nexport default (state = [initialState], action) => {\n  switch(action.type) {\n    case GET_RESULT_REQUEST:\n      return [\n        ...state,\n        {\n          isFetching: true,\n          data: []\n        }\n      ]\n    case GET_RESULT_SUCCESS:\n      return [\n        ...state,\n        {\n          isFetching: false,\n          data: action.result,\n          receivedAt: action.receivedAt\n        }\n      ]\n    case GET_RESULT_FAILURE:\n      return [\n        ...state,\n        {\n          isFetching: false,\n          error: action.error\n        }\n      ]\n    default: \n      return state;\n  }\n}","import { combineReducers } from 'redux'\nimport name from 'redux/reducers/name'\nimport result from 'redux/reducers/result'\n\nexport default combineReducers({name, result});","// ----- input Name -----\nexport const INPUT_SEND_NAME = 'SEND_NAME';\n// ----- API GET -----\nexport const GET_RESULT_REQUEST = 'GET_RESULT_REQUEST'\nexport const GET_RESULT_SUCCESS = 'GET_RESULT_SUCCESS'  \nexport const GET_RESULT_FAILURE = 'GET_RESULT_FAILURE'","import thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from 'redux/reducers'\nimport { getResult } from 'redux/selectors/result'\n\nconst logger = createLogger({\n  diff: true,\n  collapsed:true,\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk, logger)\n);\n\nstore.dispatch(getResult());\n  \nexport default store;","import axios from 'axios'\nimport { getResultRequest, getResultSuccess, getResultFailure } from 'redux/actions'\n\nexport const getResult = () => {\n  return (dispatch) => {\n    dispatch(getResultRequest());\n    axios.get(process.env.REACT_APP_API_URI)\n      .then(res => {\n        dispatch(getResultSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(getResultFailure(err));\n      });\n  }\n}","import { INPUT_SEND_NAME } from 'redux/actionTypes'\nimport { GET_RESULT_REQUEST, GET_RESULT_SUCCESS, GET_RESULT_FAILURE } from 'redux/actionTypes'\n\nexport const inputSendName = text => ({\n  type: INPUT_SEND_NAME,\n  name: text,\n});\n\nexport const getResultRequest = () => ({\n  type: GET_RESULT_REQUEST,\n});\n\nexport const getResultSuccess = json => ({\n  type: GET_RESULT_SUCCESS,\n  result: json,\n  receivedAt: Date.now(),\n});\n\nexport const getResultFailure = error => ({\n  type: GET_RESULT_FAILURE,\n  error\n});","// ----- Text for display -----\nexport const INPUT_NAME = {\n  label: 'ニックネームを入力してボタンを押してください。', \n  placeholder: 'ニックネームを入力'\n};","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { INPUT_NAME } from 'config/text'\nimport { inputSendName } from 'redux/actions'\n\nclass TopSendName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {input: '', disabled: true};\n  }\n\n  updataInput = input => {\n    this.setState({ input, disabled: input.trim() ? false : true });\n  };\n\n  handleSendName = () => {    \n    this.props.inputSendName(this.state.input.trim());\n    this.setState({input: ''});\n    this.props.transition();\n  };\n  \n  render() {\n    return (\n      <div className='nmae_form'>\n        <label htmlFor='name'>\n          {INPUT_NAME.label}\n          <input \n            type='text'\n            id='name'\n            placeholder={INPUT_NAME.placeholder}\n            onChange={e => this.updataInput(e.target.value)}\n            value={this.state.name}\n          />\n        </label>\n        <button className='send_name' onClick={(this.handleSendName)} disabled={this.state.disabled}>\n          Send name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {inputSendName})(TopSendName);","import React, { Component } from 'react'\n// import Logo from 'components/layouts/Logo'\nimport { withRouter } from 'react-router-dom'\nimport { RESULT_PAGE } from 'config/route'\nimport TopSendName from 'components/ui/TopSendName'\n\nclass Top extends Component {\n\n  handleClick = () => {\n    this.props.history.push(RESULT_PAGE);\n  };\n  \n  render() {\n    return (\n      <div className=\"top_page\">\n        {/* <Logo /> */}\n        <TopSendName transition={this.handleClick}/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Top);","// ----- Routing path -----\nexport const TOP_PAGE = '/';\nexport const RESULT_PAGE = '/result';","import React, { Component } from 'react'\nimport { getNameText } from 'redux/selectors/name'\nimport { connect } from 'react-redux'\n\nclass Result extends Component {\n  render() {\n    return (\n      <div>\n        <p className='user_name'>ユーザー：{this.props.name}</p>\n        <p className='user_name'>日付：{this.props.data.datatime}</p>\n        <p className='user_name'>脈平均：{this.props.data.pulse.avg}</p>\n        <p className='user_name'>病名：{this.props.data.sick.name}</p>\n        <p className='user_name'>説明：{this.props.data.sick.message}</p>\n      </div>\n    );\n  }\n}\n\nconst MapStateToProps = state => state.name\n\nexport default connect(MapStateToProps)(Result);","import { connect } from 'react-redux'\nimport Result from 'components/pages/Result'\n\nconst mapStateToProps = state => {\n  const length = state.result.length;\n  const currentState = state.result[length - 1];\n  return { data: currentState.data.jsonObj };\n}\n\nexport default connect(mapStateToProps)(Result)","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport React, { Component } from 'react'\n\nimport * as routes from 'config/route'\n\n// import Auth from 'components/Auth'\nimport Top from 'components/pages/Top'\nimport Result from 'containers/GetResultContainer'\n\n// ----- Screen transition -----\nexport default class Routes extends Component {\n  render() {\n    return (\n      <div className='wrapper'>\n        <Router>\n          <Switch>\n            <Route path={routes.TOP_PAGE} exact component={Top}/>\n            <Route path={routes.RESULT_PAGE} exact component={Result}/>\n            <Route exact component={Top}/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer className='footer'>\n      <p>&copy;2020 Dr.NA</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react'\n\nimport Routes from 'components/Routes'\nimport Footer from 'components/layouts/Footer'\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <Routes />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\n// ----- Redux -----\nimport { Provider } from \"react-redux\"\nimport store from './redux/store'\n// ----- App -----\nimport App from 'components/App'\n// ----- CSS -----\nimport 'stylesheet/style.sass'\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  rootElement\n);"],"sourceRoot":""}